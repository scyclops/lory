{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///jquery.lory.min.js","webpack:///webpack/bootstrap cde49b559828931f39b0","webpack:///./src/lory.js","webpack:///./src/utils/detect-prefixes.js","webpack:///./src/utils/detect-supportsPassive.js","webpack:///./src/utils/dispatch-event.js","webpack:///./node_modules/custom-event/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/defaults.js","webpack:///./src/jquery.lory.js"],"names":["root","factory","exports","module","define","amd","a","i","self","this","modules","__webpack_require__","moduleId","installedModules","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireDefault","obj","default","lory","slider","opts","setActiveElement","slides","currentIndex","_options","options","classNameActiveSlide","forEach","element","index","classList","contains","remove","add","setupInfinite","slideArray","_options2","infinite","front","slice","back","length","cloned","cloneNode","slideContainer","appendChild","reverse","insertBefore","firstChild","children","dispatchSliderEvent","phase","type","detail","_dispatchEvent2","translate","to","duration","ease","style","prefixes","transition","transform","margin_size","margin","test","parseFloat","elementWidth","width","getBoundingClientRect","offsetWidth","getComputedStyle","marginLeft","marginRight","getMaxOffset","Math","round","slidesWidth","frameWidth","getCustomDistance","direction","distance","obscured_width","transitionRemaining","abs","position","x","left","rightmost_obscured","slide","r","right","leftmost_obscured","reversedSlides","nextIndex","touchControl","_options3","slideSpeed","slidesToScroll","rewind","rewindPrev","rewindSpeed","nextSlide","maxOffset","toIndex","min","max","undefined","customNextOffset","offsetLeft","slidesFitInFrame","nextOffset","transitionEndCallback","updateCtrls","currentSlide","offset","_options4","max_offset","actual_offset","noMorePrev","noMoreNext","prevCtrl","disabledClass","nextCtrl","setup","_detectPrefixes2","_options5","classNameFrame","classNameSlideContainer","classNamePrevCtrl","classNameNextCtrl","initialIndex","frame","getElementsByClassName","addEventListener","transitionEnd","onTransitionEnd","reset","prev","next","onTouchstart","touchEventParams","window","onResize","_options6","rewindOnResize","slideWidths","map","reduce","val","slide_width","fit","floor","center","center_translate","current_left","slideTo","returnIndex","destroy","removeEventListener","onTouchmove","onTouchend","onClick","Array","apply","removeChild","lastChild","event","touches","pageX","pageY","touchOffset","y","time","Date","now","isScrolling","delta","isValid","Number","isOutOfBounds","snapBackSpeed","preventDefault","_detectSupportsPassive2","passive","jQuery","value","_extends","assign","target","arguments","source","key","_detectPrefixes","_detectSupportsPassive","_dispatchEvent","_defaults","_defaults2","detectPrefixes","el","document","createElement","prop","body","detectSupportsPassive","supportsPassive","e","dispatchEvent","_customEvent2","bubbles","cancelable","_customEvent","global","NativeCustomEvent","CustomEvent","foo","createEvent","params","initCustomEvent","createEventObject","Boolean","g","Function","eval","_lory","$","fn","each","instanceOptions","data","extend"],"mappings":"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","file":"jquery.lory.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 8);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /* eslint-disable */\n/* globals jQuery */\n\n// XXX: could also remove all rewind code & slides to scroll code if it's never used..\n\nexports.lory = lory;\n\nvar _detectPrefixes = __webpack_require__(1);\n\nvar _detectPrefixes2 = _interopRequireDefault(_detectPrefixes);\n\nvar _detectSupportsPassive = __webpack_require__(2);\n\nvar _detectSupportsPassive2 = _interopRequireDefault(_detectSupportsPassive);\n\nvar _dispatchEvent = __webpack_require__(3);\n\nvar _dispatchEvent2 = _interopRequireDefault(_dispatchEvent);\n\nvar _defaults = __webpack_require__(6);\n\nvar _defaults2 = _interopRequireDefault(_defaults);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar slice = Array.prototype.slice;\n\nfunction lory(slider, opts) {\n    var position = void 0;\n    var slidesWidth = void 0;\n    var frameWidth = void 0;\n    var slides = void 0;\n    var slidesFitInFrame = void 0;\n    var slideWidths = void 0;\n\n    /**\n     * slider DOM elements\n     */\n    var frame = void 0;\n    var slideContainer = void 0;\n    var prevCtrl = void 0;\n    var nextCtrl = void 0;\n\n    var prefixes = void 0;\n    var transitionEndCallback = void 0;\n    var disabledClass = 'disabled';\n    var noMorePrev = void 0;\n    var noMoreNext = void 0;\n    var touchControl = void 0;\n\n    var index = 0;\n    var options = {};\n    var touchEventParams = (0, _detectSupportsPassive2.default)() ? { passive: true } : false;\n\n    /**\n     * if object is jQuery convert to native DOM element\n     */\n    if (typeof jQuery !== 'undefined' && slider instanceof jQuery) {\n        slider = slider[0];\n    }\n\n    /**\n     * private\n     * set active class to element which is the current slide\n     */\n    function setActiveElement(slides, currentIndex) {\n        var _options = options,\n            classNameActiveSlide = _options.classNameActiveSlide;\n\n\n        slides.forEach(function (element, index) {\n            if (element.classList.contains(classNameActiveSlide)) {\n                element.classList.remove(classNameActiveSlide);\n            }\n        });\n\n        slides[currentIndex].classList.add(classNameActiveSlide);\n    }\n\n    /**\n     * private\n     * setupInfinite: function to setup if infinite is set\n     *\n     * @param  {array} slideArray\n     * @return {array} array of updated slideContainer elements\n     */\n    function setupInfinite(slideArray) {\n        var _options2 = options,\n            infinite = _options2.infinite;\n\n\n        var front = slideArray.slice(0, infinite);\n        var back = slideArray.slice(slideArray.length - infinite, slideArray.length);\n\n        front.forEach(function (element) {\n            var cloned = element.cloneNode(true);\n\n            slideContainer.appendChild(cloned);\n        });\n\n        back.reverse().forEach(function (element) {\n            var cloned = element.cloneNode(true);\n\n            slideContainer.insertBefore(cloned, slideContainer.firstChild);\n        });\n\n        return slice.call(slideContainer.children);\n    }\n\n    /**\n     * [dispatchSliderEvent description]\n     * @return {[type]} [description]\n     */\n    function dispatchSliderEvent(phase, type, detail) {\n        (0, _dispatchEvent2.default)(slider, phase + '.lory.' + type, detail);\n    }\n\n    /**\n     * translates to a given position in a given time in milliseconds\n     *\n     * @to        {number} number in pixels where to translate to\n     * @duration  {number} time in milliseconds for the transistion\n     * @ease      {string} easing css property\n     */\n    function translate(to, duration, ease) {\n        var style = slideContainer && slideContainer.style;\n\n        if (style) {\n            style[prefixes.transition + 'TimingFunction'] = ease;\n            style[prefixes.transition + 'Duration'] = duration + 'ms';\n            style[prefixes.transform] = 'translateX(' + to + 'px)';\n        }\n    }\n\n    function margin_size(margin) {\n        // only works on pixel (px) values\n        return (/px$/.test(margin) ? parseFloat(margin) : 0\n        );\n    }\n\n    /**\n     * returns an element's width (including margins)\n     */\n    function elementWidth(element) {\n        var width = element.getBoundingClientRect().width || element.offsetWidth,\n            style = getComputedStyle(element);\n\n        return width + margin_size(style.marginLeft) + margin_size(style.marginRight);\n    }\n\n    function getMaxOffset() {\n        return Math.round(slidesWidth - frameWidth);\n    }\n\n    function getCustomDistance(direction) {\n        // intelligently slide to show whatever is slightly obscured + other slides in that direction\n        // w/ a margin to prevent the prev/next controls from getting in the way too much\n        //\n        // assumes nav-links not shown (b/c it doesn't set the index properly but probably fixable)\n        // and untested w/ infinite or rewind options\n\n        var distance = 0,\n            ctrl_margin = 60,\n            obscured_width = 0;\n\n        // have to take into account if a previous transition is still in progress\n        var transitionRemaining = Math.abs(position.x) - Math.abs(slideContainer.getBoundingClientRect().left);\n\n        if (!direction) {\n            // previous\n            var leftmost_obscured = void 0,\n                reversedSlides = slides.slice(); // shallow copy\n\n            reversedSlides.reverse();\n\n            reversedSlides.forEach(function (slide) {\n                if (!leftmost_obscured) {\n                    var r = slide.getBoundingClientRect();\n\n                    if (r.left - transitionRemaining < 0) {\n                        leftmost_obscured = slide;\n                        distance = frameWidth - (r.right - transitionRemaining);\n                        obscured_width = r.width;\n                    }\n                }\n            });\n        } else {\n            var rightmost_obscured = void 0;\n\n            slides.forEach(function (slide) {\n                if (!rightmost_obscured) {\n                    var r = slide.getBoundingClientRect();\n\n                    if (r.right - transitionRemaining > frameWidth) {\n                        rightmost_obscured = slide;\n                        distance = r.left - transitionRemaining;\n                        obscured_width = r.width;\n                    }\n                }\n            });\n        }\n        if (distance !== 0) {\n            if (frameWidth - obscured_width <= ctrl_margin) {\n                // almost as wide as the frame so moving the full ctrl_margin wouldn't work\n                // instead, just center the obscured slide\n                distance -= (frameWidth - obscured_width) / 2;\n            } else {\n                // extra margin so that prev/next controls don't obsure too much\n                // (should probably have this be a options setting)\n                distance -= ctrl_margin;\n            }\n        }\n        return Math.round(distance);\n    }\n\n    /**\n     * slidefunction called by prev, next & touchend\n     *\n     * determine nextIndex and slide to next postion\n     * under restrictions of the defined options\n     *\n     * @direction  {boolean}\n     */\n    function slide(nextIndex, direction) {\n\n        if (touchControl) {\n            return;\n        }\n\n        var _options3 = options,\n            slideSpeed = _options3.slideSpeed,\n            slidesToScroll = _options3.slidesToScroll,\n            infinite = _options3.infinite,\n            rewind = _options3.rewind,\n            rewindPrev = _options3.rewindPrev,\n            rewindSpeed = _options3.rewindSpeed,\n            ease = _options3.ease,\n            classNameActiveSlide = _options3.classNameActiveSlide;\n\n\n        var duration = slideSpeed;\n\n        var nextSlide = direction ? index + 1 : index - 1;\n        var maxOffset = getMaxOffset();\n\n        if (maxOffset <= 0) {\n            // no sliding should be done b/c the slides are fully visible\n            return;\n        }\n\n        // nextIndex is false for prev() and next()\n\n        var toIndex = typeof nextIndex === 'number';\n\n        if (!toIndex) {\n            if (direction) {\n                if (infinite && index + infinite * 2 !== slides.length) {\n                    nextIndex = index + (infinite - index % infinite);\n                } else {\n                    nextIndex = index + slidesToScroll;\n                }\n            } else {\n                if (infinite && index % infinite !== 0) {\n                    nextIndex = index - index % infinite;\n                } else {\n                    nextIndex = index - slidesToScroll;\n                }\n            }\n        }\n\n        nextIndex = Math.min(Math.max(nextIndex, 0), slides.length - 1);\n\n        if (infinite && direction === undefined) {\n            nextIndex += infinite;\n        }\n\n        if (rewindPrev && Math.abs(position.x) === 0 && direction === false) {\n            nextIndex = slides.length - 1;\n            duration = rewindSpeed;\n        }\n\n        var customNextOffset = void 0;\n\n        if (toIndex) {\n            // use the default calculation\n            customNextOffset = slides[nextIndex].offsetLeft * -1;\n        } else {\n            var distance = void 0;\n\n            if (slidesFitInFrame || infinite || rewind) {\n                // getCustomDistance untested w/ infinite or rewind\n                distance = frameWidth;\n            } else {\n                distance = getCustomDistance(direction);\n            }\n\n            if (direction) {\n                // next\n                distance *= -1;\n            }\n            customNextOffset = position.x + distance;\n        }\n\n        var nextOffset = Math.min(Math.max(customNextOffset, maxOffset * -1), 0);\n\n        if (rewind && Math.abs(position.x) === maxOffset && direction) {\n            nextOffset = 0;\n            nextIndex = 0;\n            duration = rewindSpeed;\n        }\n\n        dispatchSliderEvent('before', 'slide', {\n            index: index,\n            nextSlide: nextSlide\n        });\n\n        /**\n         * translate to the nextOffset by a defined duration and ease function\n         */\n        translate(nextOffset, duration, ease);\n\n        /**\n         * update the position with the next position\n         */\n        position.x = nextOffset;\n\n        /**\n         * update the index with the nextIndex only if\n         * the offset of the nextIndex is in the range of the maxOffset\n         */\n        if (slides[nextIndex].offsetLeft <= maxOffset) {\n            index = nextIndex;\n        }\n\n        if (infinite && (nextIndex === slides.length - infinite || nextIndex === slides.length - slides.length % infinite || nextIndex === 0)) {\n            if (direction) {\n                index = infinite;\n            }\n\n            if (!direction) {\n                index = slides.length - infinite * 2;\n            }\n\n            position.x = slides[index].offsetLeft * -1;\n\n            // this immediately goes to a slide w/o any animation\n            transitionEndCallback = function transitionEndCallback() {\n                translate(slides[index].offsetLeft * -1, 0, undefined);\n            };\n        }\n\n        if (classNameActiveSlide) {\n            setActiveElement(slice.call(slides), index);\n        }\n\n        updateCtrls(nextIndex, nextOffset);\n\n        dispatchSliderEvent('after', 'slide', {\n            currentSlide: index\n        });\n    }\n\n    function updateCtrls(index, offset) {\n\n        if (options.infinite) {\n            // never need to disable the controls\n            return;\n        }\n\n        var _options4 = options,\n            rewind = _options4.rewind,\n            rewindPrev = _options4.rewindPrev;\n\n\n        var max_offset = getMaxOffset(),\n            actual_offset = Math.round(offset || 0);\n\n        // untested w/ rewind or rewindPrev..\n        noMorePrev = !rewindPrev && (actual_offset === 0 || max_offset <= 0);\n        noMoreNext = !rewind && (index === slides.length - 1 || max_offset <= -1 * actual_offset || // at or over the max offset so the last slide is fully visible\n        max_offset <= 0 // all the slides are visible so no reason to have a next control\n        );\n\n        /**\n         * Update control classes\n         */\n        if (prevCtrl) {\n            if (noMorePrev) {\n                prevCtrl.classList.add(disabledClass);\n            } else {\n                prevCtrl.classList.remove(disabledClass);\n            }\n        }\n        if (nextCtrl) {\n            if (noMoreNext) {\n                nextCtrl.classList.add(disabledClass);\n            } else {\n                nextCtrl.classList.remove(disabledClass);\n            }\n        }\n    }\n\n    /**\n     * public\n     * setup function\n     */\n    function setup() {\n        dispatchSliderEvent('before', 'init');\n\n        prefixes = (0, _detectPrefixes2.default)();\n        options = _extends({}, _defaults2.default, opts);\n\n        var _options5 = options,\n            classNameFrame = _options5.classNameFrame,\n            classNameSlideContainer = _options5.classNameSlideContainer,\n            classNamePrevCtrl = _options5.classNamePrevCtrl,\n            classNameNextCtrl = _options5.classNameNextCtrl,\n            classNameActiveSlide = _options5.classNameActiveSlide,\n            initialIndex = _options5.initialIndex;\n\n\n        touchControl = options.touchControl;\n\n        index = initialIndex;\n        frame = slider.getElementsByClassName(classNameFrame)[0];\n        slideContainer = frame.getElementsByClassName(classNameSlideContainer)[0];\n        prevCtrl = slider.getElementsByClassName(classNamePrevCtrl)[0];\n        nextCtrl = slider.getElementsByClassName(classNameNextCtrl)[0];\n\n        position = {\n            x: slideContainer.offsetLeft\n        };\n\n        if (options.infinite) {\n            slides = setupInfinite(slice.call(slideContainer.children));\n        } else {\n            slides = slice.call(slideContainer.children);\n        }\n        slideContainer.addEventListener(prefixes.transitionEnd, onTransitionEnd);\n\n        reset();\n\n        if (classNameActiveSlide) {\n            setActiveElement(slides, index);\n        }\n\n        if (prevCtrl && nextCtrl) {\n            prevCtrl.addEventListener('click', prev);\n            nextCtrl.addEventListener('click', next);\n        }\n\n        frame.addEventListener('touchstart', onTouchstart, touchEventParams);\n\n        /*\n        if (enableMouseEvents) {\n            frame.addEventListener('mousedown', onTouchstart);\n            frame.addEventListener('click', onClick);\n        }\n        */\n\n        options.window.addEventListener('resize', onResize);\n\n        dispatchSliderEvent('after', 'init');\n    }\n\n    /**\n     * public\n     * reset function: called on resize\n     */\n    function reset() {\n        var _options6 = options,\n            infinite = _options6.infinite,\n            ease = _options6.ease,\n            rewindSpeed = _options6.rewindSpeed,\n            rewindOnResize = _options6.rewindOnResize,\n            classNameActiveSlide = _options6.classNameActiveSlide,\n            initialIndex = _options6.initialIndex;\n\n\n        slidesWidth = elementWidth(slideContainer);\n        frameWidth = elementWidth(frame);\n\n        slideWidths = slides.map(function (slide) {\n            return elementWidth(slide);\n        });\n\n        if (frameWidth === slidesWidth) {\n            slidesWidth = slideWidths.reduce(function (val, slide_width) {\n                return val + slide_width;\n            }, 0);\n        }\n\n        var sameWidthSlides = slideWidths.reduce(function (val, slide_width) {\n            return val && slide_width === slideWidths[0];\n        }, true);\n\n        if (sameWidthSlides) {\n            var fit = frameWidth / slideWidths[0];\n            slidesFitInFrame = Math.floor(fit) === fit;\n        } else {\n            slidesFitInFrame = false;\n        }\n\n        if (rewindOnResize) {\n            index = initialIndex;\n        } else {\n            ease = null;\n            rewindSpeed = 0;\n        }\n\n        var max_offset = getMaxOffset();\n\n        if (max_offset < 0 && options.center) {\n            // all the slides fit in view \n            // so make sure they are centered\n\n            var center_translate = Math.abs(max_offset / 2),\n                current_left = slideContainer.getBoundingClientRect().left;\n\n            if (Math.abs(current_left - center_translate) > 1) {\n                // adjust to center the slides\n                translate(center_translate, 0, null);\n            }\n        } else if (infinite) {\n            translate(slides[index + infinite].offsetLeft * -1, 0, null);\n\n            index = index + infinite;\n            position.x = slides[index].offsetLeft * -1;\n        } else {\n            translate(slides[index].offsetLeft * -1, rewindSpeed, ease);\n            position.x = slides[index].offsetLeft * -1;\n        }\n\n        if (classNameActiveSlide) {\n            setActiveElement(slice.call(slides), index);\n        }\n\n        updateCtrls(index, position.x);\n    }\n\n    /**\n     * public\n     * slideTo: called on clickhandler\n     */\n    function slideTo(index) {\n        slide(index);\n    }\n\n    /**\n     * public\n     * returnIndex function: called on clickhandler\n     */\n    function returnIndex() {\n        return index - options.infinite || 0;\n    }\n\n    /**\n     * public\n     * prev function: called on clickhandler\n     */\n    function prev() {\n        slide(false, false);\n    }\n\n    /**\n     * public\n     * next function: called on clickhandler\n     */\n    function next() {\n        slide(false, true);\n    }\n\n    /**\n     * public\n     * destroy function: called to gracefully destroy the lory instance\n     */\n    function destroy() {\n        dispatchSliderEvent('before', 'destroy');\n\n        // remove event listeners\n        slideContainer.removeEventListener(prefixes.transitionEnd, onTransitionEnd);\n\n        frame.removeEventListener('touchstart', onTouchstart, touchEventParams);\n        frame.removeEventListener('touchmove', onTouchmove, touchEventParams);\n        frame.removeEventListener('touchend', onTouchend);\n        frame.removeEventListener('touchcancel', onTouchend);\n        /*\n        frame.removeEventListener('mousemove', onTouchmove);\n        frame.removeEventListener('mousedown', onTouchstart);\n        frame.removeEventListener('mouseup', onTouchend);\n        frame.removeEventListener('mouseleave', onTouchend);\n        */\n        frame.removeEventListener('click', onClick);\n\n        options.window.removeEventListener('resize', onResize);\n\n        if (prevCtrl) {\n            prevCtrl.removeEventListener('click', prev);\n        }\n\n        if (nextCtrl) {\n            nextCtrl.removeEventListener('click', next);\n        }\n\n        // remove cloned slides if infinite is set\n        if (options.infinite) {\n            Array.apply(null, Array(options.infinite)).forEach(function () {\n                slideContainer.removeChild(slideContainer.firstChild);\n                slideContainer.removeChild(slideContainer.lastChild);\n            });\n        }\n\n        dispatchSliderEvent('after', 'destroy');\n    }\n\n    // event handling\n\n    var touchOffset = void 0;\n    var delta = void 0;\n    var isScrolling = void 0;\n\n    function onTransitionEnd() {\n        if (transitionEndCallback) {\n            transitionEndCallback();\n\n            transitionEndCallback = undefined;\n        }\n    }\n\n    function onTouchstart(event) {\n        //const {enableMouseEvents} = options;\n        var touches = event.touches ? event.touches[0] : event;\n\n        /*\n        if (enableMouseEvents) {\n            frame.addEventListener('mousemove', onTouchmove);\n            frame.addEventListener('mouseup', onTouchend);\n            frame.addEventListener('mouseleave', onTouchend);\n        }\n        */\n\n        frame.addEventListener('touchmove', onTouchmove, touchEventParams);\n        frame.addEventListener('touchend', onTouchend);\n        frame.addEventListener('touchcancel', onTouchend);\n\n        var pageX = touches.pageX,\n            pageY = touches.pageY;\n\n\n        touchOffset = {\n            x: pageX,\n            y: pageY,\n            time: Date.now()\n        };\n\n        isScrolling = undefined;\n\n        delta = {};\n\n        dispatchSliderEvent('on', 'touchstart', {\n            event: event\n        });\n    }\n\n    function onTouchmove(event) {\n        var touches = event.touches ? event.touches[0] : event;\n        var pageX = touches.pageX,\n            pageY = touches.pageY;\n\n\n        delta = {\n            x: pageX - touchOffset.x,\n            y: pageY - touchOffset.y\n        };\n\n        if (typeof isScrolling === 'undefined') {\n            isScrolling = !!(isScrolling || Math.abs(delta.x) < Math.abs(delta.y));\n        }\n\n        if (!isScrolling && touchOffset) {\n            translate(position.x + delta.x, 0, null);\n        }\n\n        // may be\n        dispatchSliderEvent('on', 'touchmove', {\n            event: event\n        });\n    }\n\n    function onTouchend(event) {\n        /**\n         * time between touchstart and touchend in milliseconds\n         * @duration {number}\n         */\n        var duration = touchOffset ? Date.now() - touchOffset.time : undefined;\n\n        /**\n         * is valid if:\n         *\n         * -> swipe attempt time is under 300 ms\n         * and\n         * -> swipe distance is greater than 25px\n         * or\n         * -> swipe distance is more then a third of the swipe area\n         *\n         * @isValidSlide {Boolean}\n         */\n        var isValid = Number(duration) < 300 && (Math.abs(delta.x) > 25 || Math.abs(delta.x) > frameWidth / 3);\n\n        /**\n         * is out of bounds if:\n         *\n         * -> index is 0 and delta x is greater than 0\n         * or\n         * -> index is the last slide and delta is smaller than 0\n         *\n         * @isOutOfBounds {Boolean}\n         */\n        /*\n        const isOutOfBounds = !index && delta.x > 0 ||\n            index === slides.length - 1 && delta.x < 0;\n        */\n\n        var direction = delta.x < 0;\n\n        var isOutOfBounds = direction ? noMoreNext : noMorePrev;\n\n        if (!isScrolling) {\n            if (touchControl) {\n\n                var nextOffset = position.x + delta.x,\n                    maxOffset = getMaxOffset();\n\n                if (nextOffset > 0) {\n                    // out of bounds on left\n                    position.x = 0;\n                    translate(position.x, options.snapBackSpeed);\n                } else if (-1 * nextOffset > maxOffset) {\n                    // out of bounds on right\n                    if (maxOffset < 0 && !options.center) {\n                        // snap back to left alignment\n                        maxOffset = 0;\n                    }\n                    position.x = -1 * maxOffset;\n                    translate(position.x, options.snapBackSpeed);\n                } else {\n                    position.x = nextOffset;\n                }\n            } else if (!touchControl && isValid && !isOutOfBounds) {\n                slide(false, direction);\n            } else {\n                translate(position.x, options.snapBackSpeed);\n            }\n        }\n\n        touchOffset = undefined;\n\n        /**\n         * remove eventlisteners after swipe attempt\n         */\n        frame.removeEventListener('touchmove', onTouchmove);\n        frame.removeEventListener('touchend', onTouchend);\n        frame.removeEventListener('touchcancel', onTouchend);\n        /*\n        frame.removeEventListener('mousemove', onTouchmove);\n        frame.removeEventListener('mouseup', onTouchend);\n        frame.removeEventListener('mouseleave', onTouchend);\n        */\n\n        dispatchSliderEvent('on', 'touchend', {\n            event: event\n        });\n    }\n\n    function onClick(event) {\n        if (delta.x) {\n            event.preventDefault();\n        }\n    }\n\n    function onResize(event) {\n        if (frameWidth !== elementWidth(frame)) {\n            reset();\n\n            dispatchSliderEvent('on', 'resize', {\n                event: event\n            });\n        }\n    }\n\n    // trigger initial setup\n    setup();\n\n    // expose public api\n    return {\n        setup: setup,\n        reset: reset,\n        slideTo: slideTo,\n        returnIndex: returnIndex,\n        prev: prev,\n        next: next,\n        destroy: destroy\n    };\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = detectPrefixes;\n/**\n * Detecting prefixes for saving time and bytes\n */\nfunction detectPrefixes() {\n    var transform = 'transform';\n    var transition = 'transition';\n    var transitionEnd = 'transitionend';\n\n    (function () {\n        var el = document.createElement('_');\n        var style = el.style;\n\n        var prop = void 0;\n\n        if (style[prop = 'webkitTransition'] === '') {\n            transitionEnd = 'webkitTransitionEnd';\n            transition = prop;\n        }\n\n        if (style[prop = 'transition'] === '') {\n            transitionEnd = 'transitionend';\n            transition = prop;\n        }\n\n        if (style[prop = 'webkitTransform'] === '') {\n            transform = prop;\n        }\n\n        if (style[prop = 'msTransform'] === '') {\n            transform = prop;\n        }\n\n        if (style[prop = 'transform'] === '') {\n            transform = prop;\n        }\n\n        document.body.insertBefore(el, null);\n        style[transform] = 'translateX(0)';\n        document.body.removeChild(el);\n    })();\n\n    return {\n        transform: transform,\n        transition: transition,\n        transitionEnd: transitionEnd\n    };\n}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = detectSupportsPassive;\n/* eslint-disable */\n\nfunction detectSupportsPassive() {\n    var supportsPassive = false;\n\n    try {\n        var opts = Object.defineProperty({}, 'passive', {\n            get: function get() {\n                supportsPassive = true;\n            }\n        });\n\n        window.addEventListener('testPassive', null, opts);\n        window.removeEventListener('testPassive', null, opts);\n    } catch (e) {}\n\n    return supportsPassive;\n}\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = dispatchEvent;\n\nvar _customEvent = __webpack_require__(4);\n\nvar _customEvent2 = _interopRequireDefault(_customEvent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * dispatch custom events\n *\n * @param  {element} el         slideshow element\n * @param  {string}  type       custom event name\n * @param  {object}  detail     custom detail information\n */\nfunction dispatchEvent(target, type, detail) {\n    var event = new _customEvent2.default(type, {\n        bubbles: true,\n        cancelable: true,\n        detail: detail\n    });\n\n    target.dispatchEvent(event);\n}\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {\nvar NativeCustomEvent = global.CustomEvent;\n\nfunction useNative () {\n  try {\n    var p = new NativeCustomEvent('cat', { detail: { foo: 'bar' } });\n    return  'cat' === p.type && 'bar' === p.detail.foo;\n  } catch (e) {\n  }\n  return false;\n}\n\n/**\n * Cross-browser `CustomEvent` constructor.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent.CustomEvent\n *\n * @public\n */\n\nmodule.exports = useNative() ? NativeCustomEvent :\n\n// IE >= 9\n'undefined' !== typeof document && 'function' === typeof document.createEvent ? function CustomEvent (type, params) {\n  var e = document.createEvent('CustomEvent');\n  if (params) {\n    e.initCustomEvent(type, params.bubbles, params.cancelable, params.detail);\n  } else {\n    e.initCustomEvent(type, false, false, void 0);\n  }\n  return e;\n} :\n\n// IE <= 8\nfunction CustomEvent (type, params) {\n  var e = document.createEventObject();\n  e.type = type;\n  if (params) {\n    e.bubbles = Boolean(params.bubbles);\n    e.cancelable = Boolean(params.cancelable);\n    e.detail = params.detail;\n  } else {\n    e.bubbles = false;\n    e.cancelable = false;\n    e.detail = void 0;\n  }\n  return e;\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  /**\n   * slides scrolled at once\n   * @slidesToScroll {Number}\n   */\n  slidesToScroll: 1,\n\n  /**\n   * time in milliseconds for the animation of a valid slide attempt\n   * @slideSpeed {Number}\n   */\n  slideSpeed: 300,\n\n  /**\n   * time in milliseconds for the animation of the rewind after the last slide\n   * @rewindSpeed {Number}\n   */\n  rewindSpeed: 600,\n\n  /**\n   * time for the snapBack of the slider if the slide attempt was not valid\n   * @snapBackSpeed {Number}\n   */\n  snapBackSpeed: 200,\n\n  /**\n   * Basic easing functions: https://developer.mozilla.org/de/docs/Web/CSS/transition-timing-function\n   * cubic bezier easing functions: http://easings.net/de\n   * @ease {String}\n   */\n  ease: 'ease',\n\n  /**\n   * if slider reached the last slide, with next click the slider goes back to the startindex.\n   * use infinite or rewind, not both\n   * @rewind {Boolean}\n   */\n  rewind: false,\n\n  /**\n   * if slider is on the first slide, with prev click the slider goes to the last slide.\n   * (do not combine with infinite)\n   */\n  rewindPrev: false,\n\n  /**\n   * number of visible slides or false\n   * use infinite or rewind, not both\n   * @infinite {number}\n   */\n  infinite: false,\n\n  /**\n   * the slide index to show when the slider is initialized.\n   * @initialIndex {number}\n   */\n  initialIndex: 0,\n\n  /**\n   * class name for slider frame\n   * @classNameFrame {string}\n   */\n  classNameFrame: 'js_frame',\n\n  /**\n   * class name for slides container\n   * @classNameSlideContainer {string}\n   */\n  classNameSlideContainer: 'js_slides',\n\n  /**\n   * class name for slider prev control\n   * @classNamePrevCtrl {string}\n   */\n  classNamePrevCtrl: 'js_prev',\n\n  /**\n   * class name for slider next control\n   * @classNameNextCtrl {string}\n   */\n  classNameNextCtrl: 'js_next',\n\n  /**\n   * class name for current active slide\n   * if emptyString then no class is set\n   * @classNameActiveSlide {string}\n   */\n  classNameActiveSlide: 'active',\n\n  /**\n   * enables mouse events for swiping on desktop devices\n   * @enableMouseEvents {boolean}\n   */\n  //enableMouseEvents: false, // unused\n\n  /**\n   * window instance\n   * @window {object}\n   */\n  window: typeof window !== 'undefined' ? window : null,\n\n  /**\n   * If false, slides lory to the first slide on window resize.\n   * @rewindOnResize {boolean}\n   */\n  rewindOnResize: true,\n\n  // whether touch alone controls the slider positioning\n  touchControl: false,\n\n  // whether to center slides if they take up less than the frame width\n  center: true\n\n};\n\n/***/ }),\n/* 7 */,\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _lory = __webpack_require__(0);\n\nfunction init($) {\n    $.fn.lory = function (options) {\n        return this.each(function () {\n            var instanceOptions;\n\n            if (!$.data(this, 'lory')) {\n                instanceOptions = $.extend({}, options, $(this).data());\n                $.data(this, 'lory', (0, _lory.lory)(this, instanceOptions));\n            }\n        });\n    };\n} /* globals jQuery */\n;\n\nif (typeof jQuery !== 'undefined') {\n    init(jQuery);\n}\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// jquery.lory.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cde49b559828931f39b0","/* eslint-disable */\n/* globals jQuery */\n\n// XXX: could also remove all rewind code & slides to scroll code if it's never used..\n\nimport detectPrefixes from './utils/detect-prefixes.js';\nimport supportsPassive from './utils/detect-supportsPassive';\nimport dispatchEvent from './utils/dispatch-event.js';\nimport defaults from './defaults.js';\n\nconst slice = Array.prototype.slice;\n\nexport function lory (slider, opts) {\n    let position;\n    let slidesWidth;\n    let frameWidth;\n    let slides;\n    let slidesFitInFrame;\n    let slideWidths;\n\n    /**\n     * slider DOM elements\n     */\n    let frame;\n    let slideContainer;\n    let prevCtrl;\n    let nextCtrl;\n\n    let prefixes;\n    let transitionEndCallback;\n    let disabledClass = 'disabled';\n    let noMorePrev;\n    let noMoreNext;\n    let touchControl;\n\n    let index   = 0;\n    let options = {};\n    let touchEventParams = supportsPassive() ? { passive: true } : false;\n\n    /**\n     * if object is jQuery convert to native DOM element\n     */\n    if (typeof jQuery !== 'undefined' && slider instanceof jQuery) {\n        slider = slider[0];\n    }\n\n    /**\n     * private\n     * set active class to element which is the current slide\n     */\n    function setActiveElement (slides, currentIndex) {\n        const {classNameActiveSlide} = options;\n\n        slides.forEach((element, index) => {\n            if (element.classList.contains(classNameActiveSlide)) {\n                element.classList.remove(classNameActiveSlide);\n            }\n        });\n\n        slides[currentIndex].classList.add(classNameActiveSlide);\n    }\n\n    /**\n     * private\n     * setupInfinite: function to setup if infinite is set\n     *\n     * @param  {array} slideArray\n     * @return {array} array of updated slideContainer elements\n     */\n    function setupInfinite (slideArray) {\n        const {infinite} = options;\n\n        const front = slideArray.slice(0, infinite);\n        const back  = slideArray.slice(slideArray.length - infinite, slideArray.length);\n\n        front.forEach(function (element) {\n            const cloned = element.cloneNode(true);\n\n            slideContainer.appendChild(cloned);\n        });\n\n        back.reverse()\n            .forEach(function (element) {\n                const cloned = element.cloneNode(true);\n\n                slideContainer.insertBefore(cloned, slideContainer.firstChild);\n            });\n\n        return slice.call(slideContainer.children);\n    }\n\n    /**\n     * [dispatchSliderEvent description]\n     * @return {[type]} [description]\n     */\n    function dispatchSliderEvent (phase, type, detail) {\n        dispatchEvent(slider, `${phase}.lory.${type}`, detail);\n    }\n\n    /**\n     * translates to a given position in a given time in milliseconds\n     *\n     * @to        {number} number in pixels where to translate to\n     * @duration  {number} time in milliseconds for the transistion\n     * @ease      {string} easing css property\n     */\n    function translate (to, duration, ease) {\n        const style = slideContainer && slideContainer.style;\n\n        if (style) {\n            style[prefixes.transition + 'TimingFunction'] = ease;\n            style[prefixes.transition + 'Duration'] = duration + 'ms';\n            style[prefixes.transform] = 'translateX(' + to + 'px)';\n        }\n    }\n\n    function margin_size(margin) {\n        // only works on pixel (px) values\n        return /px$/.test(margin) ? parseFloat(margin) : 0;\n    }\n\n    /**\n     * returns an element's width (including margins)\n     */\n    function elementWidth (element) {\n        let width = element.getBoundingClientRect().width || element.offsetWidth,\n            style = getComputedStyle(element);\n\n        return width + margin_size(style.marginLeft) + margin_size(style.marginRight);\n    }\n\n    function getMaxOffset () {\n        return Math.round(slidesWidth - frameWidth);\n    }\n\n    function getCustomDistance (direction) {\n        // intelligently slide to show whatever is slightly obscured + other slides in that direction\n        // w/ a margin to prevent the prev/next controls from getting in the way too much\n        //\n        // assumes nav-links not shown (b/c it doesn't set the index properly but probably fixable)\n        // and untested w/ infinite or rewind options\n\n        let distance = 0,\n            ctrl_margin = 60,\n            obscured_width = 0;\n\n        // have to take into account if a previous transition is still in progress\n        let transitionRemaining = Math.abs(position.x) - Math.abs(slideContainer.getBoundingClientRect().left);\n\n        if (!direction) {\n            // previous\n            let leftmost_obscured,\n                reversedSlides = slides.slice(); // shallow copy\n\n            reversedSlides.reverse();\n\n            reversedSlides.forEach(slide => {\n                if (!leftmost_obscured) {\n                    let r = slide.getBoundingClientRect();\n\n                    if (r.left - transitionRemaining < 0) {\n                        leftmost_obscured = slide;\n                        distance = frameWidth - (r.right - transitionRemaining);\n                        obscured_width = r.width;\n                    }\n                }\n            });\n        } else {\n            let rightmost_obscured;\n\n            slides.forEach(slide => {\n                if (!rightmost_obscured) {\n                    let r = slide.getBoundingClientRect();\n\n                    if (r.right - transitionRemaining > frameWidth) {\n                        rightmost_obscured = slide;\n                        distance = (r.left - transitionRemaining);\n                        obscured_width = r.width;\n                    }\n                }\n            });\n        }\n        if (distance !== 0) {\n            if (frameWidth - obscured_width <= ctrl_margin) {\n                // almost as wide as the frame so moving the full ctrl_margin wouldn't work\n                // instead, just center the obscured slide\n                distance -= (frameWidth - obscured_width) / 2;\n            } else {\n                // extra margin so that prev/next controls don't obsure too much\n                // (should probably have this be a options setting)\n                distance -= ctrl_margin;\n            }\n        }\n        return Math.round(distance);\n    }\n\n    /**\n     * slidefunction called by prev, next & touchend\n     *\n     * determine nextIndex and slide to next postion\n     * under restrictions of the defined options\n     *\n     * @direction  {boolean}\n     */\n    function slide (nextIndex, direction) {\n\n        if (touchControl) {\n            return;\n        }\n\n        const {\n            slideSpeed,\n            slidesToScroll,\n            infinite,\n            rewind,\n            rewindPrev,\n            rewindSpeed,\n            ease,\n            classNameActiveSlide\n        } = options;\n\n        let duration = slideSpeed;\n\n        const nextSlide = direction ? index + 1 : index - 1;\n        const maxOffset = getMaxOffset();\n\n        if (maxOffset <= 0) {\n            // no sliding should be done b/c the slides are fully visible\n            return;\n        }\n\n        // nextIndex is false for prev() and next()\n\n        let toIndex = typeof nextIndex === 'number';\n\n        if (!toIndex) {\n            if (direction) {\n              if (infinite && index + (infinite * 2) !== slides.length) {\n                  nextIndex = index + (infinite - index % infinite);\n              } else {\n                  nextIndex = index + slidesToScroll;\n              }\n            } else {\n              if (infinite && index % infinite !== 0) {\n                  nextIndex = index - index % infinite;\n              } else {\n                  nextIndex = index - slidesToScroll;\n              }\n            }\n        }\n\n        nextIndex = Math.min(Math.max(nextIndex, 0), slides.length - 1);\n\n        if (infinite && direction === undefined) {\n            nextIndex += infinite;\n        }\n\n        if (rewindPrev && Math.abs(position.x) === 0 && direction === false) {\n            nextIndex = slides.length - 1;\n            duration = rewindSpeed;\n        }\n\n        let customNextOffset;\n\n        if (toIndex) {\n            // use the default calculation\n            customNextOffset = slides[nextIndex].offsetLeft * -1;\n        } else {\n            let distance;\n\n            if (slidesFitInFrame || infinite || rewind) { // getCustomDistance untested w/ infinite or rewind\n                distance = frameWidth;\n            } else {\n                distance = getCustomDistance(direction);\n            }\n\n            if (direction) {\n                // next\n                distance *= -1;\n            }\n            customNextOffset = position.x + distance;\n        }\n\n        let nextOffset = Math.min(\n            Math.max(\n                customNextOffset,\n                maxOffset * -1\n            ),\n        0);\n\n        if (rewind && Math.abs(position.x) === maxOffset && direction) {\n            nextOffset = 0;\n            nextIndex = 0;\n            duration = rewindSpeed;\n        }\n\n        dispatchSliderEvent('before', 'slide', {\n            index,\n            nextSlide\n        });\n\n        /**\n         * translate to the nextOffset by a defined duration and ease function\n         */\n        translate(nextOffset, duration, ease);\n\n        /**\n         * update the position with the next position\n         */\n        position.x = nextOffset;\n\n        /**\n         * update the index with the nextIndex only if\n         * the offset of the nextIndex is in the range of the maxOffset\n         */\n        if (slides[nextIndex].offsetLeft <= maxOffset) {\n            index = nextIndex;\n        }\n\n        if (infinite && (nextIndex === slides.length - infinite ||\n            nextIndex === slides.length - slides.length % infinite || nextIndex === 0)) {\n            if (direction) {\n                index = infinite;\n            }\n\n            if (!direction) {\n                index = slides.length - (infinite * 2);\n            }\n\n            position.x = slides[index].offsetLeft * -1;\n\n            // this immediately goes to a slide w/o any animation\n            transitionEndCallback = function () {\n                translate(slides[index].offsetLeft * -1, 0, undefined);\n            };\n        }\n\n        if (classNameActiveSlide) {\n            setActiveElement(slice.call(slides), index);\n        }\n\n        updateCtrls(nextIndex, nextOffset);\n\n        dispatchSliderEvent('after', 'slide', {\n            currentSlide: index\n        });\n    }\n\n    function updateCtrls (index, offset) {\n\n        if (options.infinite) {\n            // never need to disable the controls\n            return;\n        }\n\n        const {\n            rewind,\n            rewindPrev,\n        } = options;\n\n        let max_offset = getMaxOffset(),\n            actual_offset = Math.round(offset || 0);\n\n        // untested w/ rewind or rewindPrev..\n        noMorePrev = !rewindPrev && (actual_offset === 0 || max_offset <= 0);\n        noMoreNext = (!rewind && (\n            (index === slides.length - 1) ||\n            (max_offset <= -1 * actual_offset) || // at or over the max offset so the last slide is fully visible\n            (max_offset <= 0) // all the slides are visible so no reason to have a next control\n        ));\n\n        /**\n         * Update control classes\n         */\n        if (prevCtrl) {\n            if (noMorePrev) {\n                prevCtrl.classList.add(disabledClass);\n            } else {\n                prevCtrl.classList.remove(disabledClass);\n            }\n        }\n        if (nextCtrl) {\n            if (noMoreNext) {\n                nextCtrl.classList.add(disabledClass);\n            } else {\n                nextCtrl.classList.remove(disabledClass);\n            }\n        }\n    }\n\n    /**\n     * public\n     * setup function\n     */\n    function setup () {\n        dispatchSliderEvent('before', 'init');\n\n        prefixes = detectPrefixes();\n        options = {...defaults, ...opts};\n\n        const {\n            classNameFrame,\n            classNameSlideContainer,\n            classNamePrevCtrl,\n            classNameNextCtrl,\n            //enableMouseEvents,\n            classNameActiveSlide,\n            initialIndex\n        } = options;\n\n        touchControl = options.touchControl;\n\n        index = initialIndex;\n        frame = slider.getElementsByClassName(classNameFrame)[0];\n        slideContainer = frame.getElementsByClassName(classNameSlideContainer)[0];\n        prevCtrl = slider.getElementsByClassName(classNamePrevCtrl)[0];\n        nextCtrl = slider.getElementsByClassName(classNameNextCtrl)[0];\n\n        position = {\n            x: slideContainer.offsetLeft,\n            //y: slideContainer.offsetTop // unused\n        };\n\n        if (options.infinite) {\n            slides = setupInfinite(slice.call(slideContainer.children));\n        } else {\n            slides = slice.call(slideContainer.children);\n        }\n        slideContainer.addEventListener(prefixes.transitionEnd, onTransitionEnd);\n\n        reset();\n\n        if (classNameActiveSlide) {\n            setActiveElement(slides, index);\n        }\n\n        if (prevCtrl && nextCtrl) {\n            prevCtrl.addEventListener('click', prev);\n            nextCtrl.addEventListener('click', next);\n        }\n\n        frame.addEventListener('touchstart', onTouchstart, touchEventParams);\n\n        /*\n        if (enableMouseEvents) {\n            frame.addEventListener('mousedown', onTouchstart);\n            frame.addEventListener('click', onClick);\n        }\n        */\n\n        options.window.addEventListener('resize', onResize);\n\n        dispatchSliderEvent('after', 'init');\n    }\n\n    /**\n     * public\n     * reset function: called on resize\n     */\n    function reset () {\n        let {infinite, ease, rewindSpeed, rewindOnResize, classNameActiveSlide, initialIndex} = options;\n\n        slidesWidth = elementWidth(slideContainer);\n        frameWidth = elementWidth(frame);\n\n        slideWidths = slides.map(slide => elementWidth(slide));\n\n        if (frameWidth === slidesWidth) {\n            slidesWidth = slideWidths.reduce((val, slide_width) => val + slide_width, 0);\n        }\n\n        let sameWidthSlides = slideWidths.reduce((val, slide_width) => val && slide_width === slideWidths[0], true);\n\n        if (sameWidthSlides) {\n            let fit = frameWidth / slideWidths[0];\n            slidesFitInFrame = (Math.floor(fit) === fit);\n        } else {\n            slidesFitInFrame = false;\n        }\n\n        if (rewindOnResize) {\n            index = initialIndex;\n        } else {\n            ease = null;\n            rewindSpeed = 0;\n        }\n\n        let max_offset = getMaxOffset();\n\n        if (max_offset < 0 && options.center) {\n            // all the slides fit in view \n            // so make sure they are centered\n\n            let center_translate = Math.abs(max_offset / 2),\n                current_left = slideContainer.getBoundingClientRect().left;\n\n            if (Math.abs(current_left - center_translate) > 1) {\n                // adjust to center the slides\n                translate(center_translate, 0, null);\n            }\n\n        } else if (infinite) {\n            translate(slides[index + infinite].offsetLeft * -1, 0, null);\n\n            index = index + infinite;\n            position.x = slides[index].offsetLeft * -1;\n        } else {\n            translate(slides[index].offsetLeft * -1, rewindSpeed, ease);\n            position.x = slides[index].offsetLeft * -1;\n        }\n\n        if (classNameActiveSlide) {\n            setActiveElement(slice.call(slides), index);\n        }\n\n        updateCtrls(index, position.x);\n    }\n\n    /**\n     * public\n     * slideTo: called on clickhandler\n     */\n    function slideTo (index) {\n        slide(index);\n    }\n\n    /**\n     * public\n     * returnIndex function: called on clickhandler\n     */\n    function returnIndex () {\n        return index - options.infinite || 0;\n    }\n\n    /**\n     * public\n     * prev function: called on clickhandler\n     */\n    function prev () {\n        slide(false, false);\n    }\n\n    /**\n     * public\n     * next function: called on clickhandler\n     */\n    function next () {\n        slide(false, true);\n    }\n\n    /**\n     * public\n     * destroy function: called to gracefully destroy the lory instance\n     */\n    function destroy () {\n        dispatchSliderEvent('before', 'destroy');\n\n        // remove event listeners\n        slideContainer.removeEventListener(prefixes.transitionEnd, onTransitionEnd);\n\n        frame.removeEventListener('touchstart', onTouchstart, touchEventParams);\n        frame.removeEventListener('touchmove', onTouchmove, touchEventParams);\n        frame.removeEventListener('touchend', onTouchend);\n        frame.removeEventListener('touchcancel', onTouchend);\n        /*\n        frame.removeEventListener('mousemove', onTouchmove);\n        frame.removeEventListener('mousedown', onTouchstart);\n        frame.removeEventListener('mouseup', onTouchend);\n        frame.removeEventListener('mouseleave', onTouchend);\n        */\n        frame.removeEventListener('click', onClick);\n\n        options.window.removeEventListener('resize', onResize);\n\n        if (prevCtrl) {\n            prevCtrl.removeEventListener('click', prev);\n        }\n\n        if (nextCtrl) {\n            nextCtrl.removeEventListener('click', next);\n        }\n\n        // remove cloned slides if infinite is set\n        if (options.infinite) {\n            Array.apply(null, Array(options.infinite)).forEach(function () {\n                slideContainer.removeChild(slideContainer.firstChild);\n                slideContainer.removeChild(slideContainer.lastChild);\n            });\n        }\n\n        dispatchSliderEvent('after', 'destroy');\n    }\n\n    // event handling\n\n    let touchOffset;\n    let delta;\n    let isScrolling;\n\n    function onTransitionEnd () {\n        if (transitionEndCallback) {\n            transitionEndCallback();\n\n            transitionEndCallback = undefined;\n        }\n    }\n\n    function onTouchstart (event) {\n        //const {enableMouseEvents} = options;\n        const touches = event.touches ? event.touches[0] : event;\n\n        /*\n        if (enableMouseEvents) {\n            frame.addEventListener('mousemove', onTouchmove);\n            frame.addEventListener('mouseup', onTouchend);\n            frame.addEventListener('mouseleave', onTouchend);\n        }\n        */\n\n        frame.addEventListener('touchmove', onTouchmove, touchEventParams);\n        frame.addEventListener('touchend', onTouchend);\n        frame.addEventListener('touchcancel', onTouchend);\n\n        const {pageX, pageY} = touches;\n\n        touchOffset = {\n            x: pageX,\n            y: pageY,\n            time: Date.now()\n        };\n\n        isScrolling = undefined;\n\n        delta = {};\n\n        dispatchSliderEvent('on', 'touchstart', {\n            event\n        });\n    }\n\n    function onTouchmove (event) {\n        const touches = event.touches ? event.touches[0] : event;\n        const {pageX, pageY} = touches;\n\n        delta = {\n            x: pageX - touchOffset.x,\n            y: pageY - touchOffset.y\n        };\n\n        if (typeof isScrolling === 'undefined') {\n            isScrolling = !!(isScrolling || Math.abs(delta.x) < Math.abs(delta.y));\n        }\n\n        if (!isScrolling && touchOffset) {\n            translate(position.x + delta.x, 0, null);\n        }\n\n        // may be\n        dispatchSliderEvent('on', 'touchmove', {\n            event\n        });\n    }\n\n    function onTouchend (event) {\n        /**\n         * time between touchstart and touchend in milliseconds\n         * @duration {number}\n         */\n        const duration = touchOffset ? Date.now() - touchOffset.time : undefined;\n\n        /**\n         * is valid if:\n         *\n         * -> swipe attempt time is under 300 ms\n         * and\n         * -> swipe distance is greater than 25px\n         * or\n         * -> swipe distance is more then a third of the swipe area\n         *\n         * @isValidSlide {Boolean}\n         */\n        const isValid = Number(duration) < 300 && (Math.abs(delta.x) > 25 || Math.abs(delta.x) > frameWidth / 3);\n\n        /**\n         * is out of bounds if:\n         *\n         * -> index is 0 and delta x is greater than 0\n         * or\n         * -> index is the last slide and delta is smaller than 0\n         *\n         * @isOutOfBounds {Boolean}\n         */\n        /*\n        const isOutOfBounds = !index && delta.x > 0 ||\n            index === slides.length - 1 && delta.x < 0;\n        */\n\n        const direction = delta.x < 0;\n\n        const isOutOfBounds = direction ? noMoreNext : noMorePrev;\n\n        if (!isScrolling) {\n            if (touchControl) {\n\n                let nextOffset = position.x + delta.x,\n                    maxOffset = getMaxOffset();\n\n                if (nextOffset > 0) {\n                    // out of bounds on left\n                    position.x = 0;\n                    translate(position.x, options.snapBackSpeed);\n                } else if ((-1 * nextOffset) > maxOffset) {\n                    // out of bounds on right\n                    if (maxOffset < 0 && !options.center) {\n                        // snap back to left alignment\n                        maxOffset = 0;\n                    }\n                    position.x = -1 * maxOffset;\n                    translate(position.x, options.snapBackSpeed);\n                } else {\n                    position.x = nextOffset;\n                }\n\n            } else if (!touchControl && isValid && !isOutOfBounds) {\n                slide(false, direction);\n            } else {\n                translate(position.x, options.snapBackSpeed);\n            }\n        }\n\n        touchOffset = undefined;\n\n        /**\n         * remove eventlisteners after swipe attempt\n         */\n        frame.removeEventListener('touchmove', onTouchmove);\n        frame.removeEventListener('touchend', onTouchend);\n        frame.removeEventListener('touchcancel', onTouchend);\n        /*\n        frame.removeEventListener('mousemove', onTouchmove);\n        frame.removeEventListener('mouseup', onTouchend);\n        frame.removeEventListener('mouseleave', onTouchend);\n        */\n\n        dispatchSliderEvent('on', 'touchend', {\n            event\n        });\n    }\n\n    function onClick (event) {\n        if (delta.x) {\n            event.preventDefault();\n        }\n    }\n\n    function onResize (event) {\n        if (frameWidth !== elementWidth(frame)) {\n            reset();\n\n            dispatchSliderEvent('on', 'resize', {\n                event\n            });\n        }\n    }\n\n    // trigger initial setup\n    setup();\n\n    // expose public api\n    return {\n        setup,\n        reset,\n        slideTo,\n        returnIndex,\n        prev,\n        next,\n        destroy\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lory.js","/**\n * Detecting prefixes for saving time and bytes\n */\nexport default function detectPrefixes () {\n    let transform = 'transform';\n    let transition = 'transition';\n    let transitionEnd = 'transitionend';\n\n    (function () {\n        let el = document.createElement('_');\n        let style = el.style;\n\n        let prop;\n\n        if (style[prop = 'webkitTransition'] === '') {\n            transitionEnd = 'webkitTransitionEnd';\n            transition = prop;\n        }\n\n        if (style[prop = 'transition'] === '') {\n            transitionEnd = 'transitionend';\n            transition = prop;\n        }\n\n        if (style[prop = 'webkitTransform'] === '') {\n            transform = prop;\n        }\n\n        if (style[prop = 'msTransform'] === '') {\n            transform = prop;\n        }\n\n        if (style[prop = 'transform'] === '') {\n            transform = prop;\n        }\n\n        document.body.insertBefore(el, null);\n        style[transform] = 'translateX(0)';\n        document.body.removeChild(el);\n    }());\n\n    return {\n        transform,\n        transition,\n        transitionEnd\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/detect-prefixes.js","/* eslint-disable */\n\nexport default function detectSupportsPassive () {\n    let supportsPassive = false;\n\n    try {\n        let opts = Object.defineProperty({}, 'passive', {\n            get () {\n                supportsPassive = true;\n            }\n        });\n\n        window.addEventListener('testPassive', null, opts);\n        window.removeEventListener('testPassive', null, opts);\n    } catch (e) {}\n\n    return supportsPassive;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/detect-supportsPassive.js","import CustomEvent from 'custom-event';\n\n/**\n * dispatch custom events\n *\n * @param  {element} el         slideshow element\n * @param  {string}  type       custom event name\n * @param  {object}  detail     custom detail information\n */\nexport default function dispatchEvent (target, type, detail) {\n    let event = new CustomEvent(\n        type,\n        {\n            bubbles: true,\n            cancelable: true,\n            detail: detail\n        }\n    );\n\n    target.dispatchEvent(event);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/dispatch-event.js","\nvar NativeCustomEvent = global.CustomEvent;\n\nfunction useNative () {\n  try {\n    var p = new NativeCustomEvent('cat', { detail: { foo: 'bar' } });\n    return  'cat' === p.type && 'bar' === p.detail.foo;\n  } catch (e) {\n  }\n  return false;\n}\n\n/**\n * Cross-browser `CustomEvent` constructor.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent.CustomEvent\n *\n * @public\n */\n\nmodule.exports = useNative() ? NativeCustomEvent :\n\n// IE >= 9\n'undefined' !== typeof document && 'function' === typeof document.createEvent ? function CustomEvent (type, params) {\n  var e = document.createEvent('CustomEvent');\n  if (params) {\n    e.initCustomEvent(type, params.bubbles, params.cancelable, params.detail);\n  } else {\n    e.initCustomEvent(type, false, false, void 0);\n  }\n  return e;\n} :\n\n// IE <= 8\nfunction CustomEvent (type, params) {\n  var e = document.createEventObject();\n  e.type = type;\n  if (params) {\n    e.bubbles = Boolean(params.bubbles);\n    e.cancelable = Boolean(params.cancelable);\n    e.detail = params.detail;\n  } else {\n    e.bubbles = false;\n    e.cancelable = false;\n    e.detail = void 0;\n  }\n  return e;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/custom-event/index.js\n// module id = 4\n// module chunks = 0 1","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 5\n// module chunks = 0 1","export default {\n    /**\n     * slides scrolled at once\n     * @slidesToScroll {Number}\n     */\n    slidesToScroll: 1,\n\n    /**\n     * time in milliseconds for the animation of a valid slide attempt\n     * @slideSpeed {Number}\n     */\n    slideSpeed: 300,\n\n    /**\n     * time in milliseconds for the animation of the rewind after the last slide\n     * @rewindSpeed {Number}\n     */\n    rewindSpeed: 600,\n\n    /**\n     * time for the snapBack of the slider if the slide attempt was not valid\n     * @snapBackSpeed {Number}\n     */\n    snapBackSpeed: 200,\n\n    /**\n     * Basic easing functions: https://developer.mozilla.org/de/docs/Web/CSS/transition-timing-function\n     * cubic bezier easing functions: http://easings.net/de\n     * @ease {String}\n     */\n    ease: 'ease',\n\n    /**\n     * if slider reached the last slide, with next click the slider goes back to the startindex.\n     * use infinite or rewind, not both\n     * @rewind {Boolean}\n     */\n    rewind: false,\n\n    /**\n     * if slider is on the first slide, with prev click the slider goes to the last slide.\n     * (do not combine with infinite)\n     */\n    rewindPrev: false,\n\n    /**\n     * number of visible slides or false\n     * use infinite or rewind, not both\n     * @infinite {number}\n     */\n    infinite: false,\n\n    /**\n     * the slide index to show when the slider is initialized.\n     * @initialIndex {number}\n     */\n    initialIndex: 0,\n\n    /**\n     * class name for slider frame\n     * @classNameFrame {string}\n     */\n    classNameFrame: 'js_frame',\n\n    /**\n     * class name for slides container\n     * @classNameSlideContainer {string}\n     */\n    classNameSlideContainer: 'js_slides',\n\n    /**\n     * class name for slider prev control\n     * @classNamePrevCtrl {string}\n     */\n    classNamePrevCtrl: 'js_prev',\n\n    /**\n     * class name for slider next control\n     * @classNameNextCtrl {string}\n     */\n    classNameNextCtrl: 'js_next',\n\n    /**\n     * class name for current active slide\n     * if emptyString then no class is set\n     * @classNameActiveSlide {string}\n     */\n    classNameActiveSlide: 'active',\n\n    /**\n     * enables mouse events for swiping on desktop devices\n     * @enableMouseEvents {boolean}\n     */\n    //enableMouseEvents: false, // unused\n\n    /**\n     * window instance\n     * @window {object}\n     */\n    window: typeof window !== 'undefined' ? window : null,\n\n    /**\n     * If false, slides lory to the first slide on window resize.\n     * @rewindOnResize {boolean}\n     */\n    rewindOnResize: true,\n\n    // whether touch alone controls the slider positioning\n    touchControl: false,\n\n    // whether to center slides if they take up less than the frame width\n    center: true,\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/defaults.js","/* globals jQuery */\nimport {lory} from './lory.js';\n\nfunction init ($) {\n    $.fn.lory = function (options) {\n        return this.each(function () {\n            var instanceOptions;\n\n            if (!$.data(this, 'lory')) {\n                instanceOptions = $.extend({}, options, $(this).data());\n                $.data(this, 'lory', lory(this, instanceOptions));\n            }\n        });\n    };\n};\n\nif (typeof (jQuery) !== 'undefined') {\n    init(jQuery);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/jquery.lory.js"],"sourceRoot":""}